// <auto-generated />
using System;
using PFE_Etudiant_Asteelflash.Infrastucture.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PFE_Etudiant_Asteelflash.Infrastucture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250618102407_Update_ApplicationUser_Add_Image_Profile")]
    partial class Update_ApplicationUser_Add_Image_Profile
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ActD7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConnaissanceExperience")
                        .HasColumnType("int");

                    b.Property<int>("QrqcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QrqcId")
                        .IsUnique();

                    b.ToTable("ActD7");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Conclusion_tri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QRQCId")
                        .HasColumnType("int");

                    b.Property<int>("TypeReclamation")
                        .HasColumnType("int");

                    b.Property<int>("action")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QRQCId")
                        .IsUnique();

                    b.ToTable("ActionDeSecurisationD3");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ActionImmediateGlobale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActionDeSecurisationId")
                        .HasColumnType("int");

                    b.Property<string>("ConclusionTri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Contenir_Déroulement")
                        .HasColumnType("int");

                    b.Property<int?>("Contenir_Stopper")
                        .HasColumnType("int");

                    b.Property<int?>("Réparer_Déclenchement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionDeSecurisationId")
                        .IsUnique()
                        .HasFilter("[ActionDeSecurisationId] IS NOT NULL");

                    b.ToTable("ActionImmediateGlobale");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.AssurerD3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionDeSecurisationD3ID")
                        .HasColumnType("int");

                    b.Property<int?>("Assurer_Audit")
                        .HasColumnType("int");

                    b.Property<int?>("Assurer_Réunion")
                        .HasColumnType("int");

                    b.Property<string>("PiloteID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ActionDeSecurisationD3ID")
                        .IsUnique();

                    b.HasIndex("PiloteID");

                    b.ToTable("AssurerD3");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.CauseOccurenceD4", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Cause")
                        .HasColumnType("int");

                    b.Property<string>("Pourquoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QrqcId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("QrqcId")
                        .IsUnique();

                    b.ToTable("CauseOccurenceD4");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.CausesNonDetectionD4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cause")
                        .HasColumnType("int");

                    b.Property<string>("Pourquoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QrqcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QrqcId")
                        .IsUnique();

                    b.ToTable("CausesNonDetectionD4");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ClotureD8", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("ApprobationChefEquipe")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprobationQualitéProd")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprobationRespProd")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprobationRespQualite")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprobationRespZap")
                        .HasColumnType("bit");

                    b.Property<string>("ChefEquipeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QrqcId")
                        .HasColumnType("int");

                    b.Property<string>("QualitéProdId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RespProdId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RespQualiteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RespZapId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("ChefEquipeId");

                    b.HasIndex("QrqcId")
                        .IsUnique();

                    b.HasIndex("QualitéProdId");

                    b.HasIndex("RespProdId");

                    b.HasIndex("RespQualiteId");

                    b.HasIndex("RespZapId");

                    b.ToTable("ClotureD8");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ContenirD3", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ActionDeSecurisationD3ID")
                        .HasColumnType("int");

                    b.Property<int?>("Contenir_Ajout")
                        .HasColumnType("int");

                    b.Property<int?>("Contenir_Déroulement")
                        .HasColumnType("int");

                    b.Property<int?>("Contenir_Stopper")
                        .HasColumnType("int");

                    b.Property<string>("PiloteID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("ActionDeSecurisationD3ID")
                        .IsUnique();

                    b.HasIndex("PiloteID");

                    b.ToTable("ContenirD3");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.DescriptionDuProblemeD2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detecteur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan>("Heure")
                        .HasColumnType("time");

                    b.Property<string>("LieuDeDetection")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManiéreDeDetection")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NbreDePiecesConcernes")
                        .HasColumnType("int");

                    b.Property<string>("Probleme")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("QRQCId")
                        .HasColumnType("int");

                    b.Property<string>("RaisonDuProbleme")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("ReccurenceDuProbleme")
                        .HasColumnType("bit");

                    b.Property<bool>("Risque")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("QRQCId")
                        .IsUnique();

                    b.ToTable("DescriptionDuProblemeD2");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Fonction")
                        .HasColumnType("int");

                    b.Property<bool>("IsAbsent")
                        .HasColumnType("bit");

                    b.Property<int>("QrqcId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("QrqcId");

                    b.HasIndex("UserId");

                    b.ToTable("Equipe");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Fnc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Action_de_reparation")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Bilan_de_tri")
                        .HasColumnType("bit");

                    b.Property<string>("Client_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detection_loc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Etat")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Hour")
                        .HasColumnType("time");

                    b.Property<string>("ImageUrl_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl_Piece_Mauvaise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl_Piece_bonne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NcImpact")
                        .HasColumnType("int");

                    b.Property<string>("Num")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Numero_dérogation")
                        .HasColumnType("int");

                    b.Property<string>("ProcessorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Quantite_Isoloation_de_lot")
                        .HasColumnType("int");

                    b.Property<int?>("Quantite_Rebut")
                        .HasColumnType("int");

                    b.Property<int>("Quantity_NOK")
                        .HasColumnType("int");

                    b.Property<string>("Ref")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransmitterID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Tri_NOk")
                        .HasColumnType("int");

                    b.Property<int?>("Tri_Ok")
                        .HasColumnType("int");

                    b.Property<int>("TypeDefaut")
                        .HasColumnType("int");

                    b.Property<int>("TypeFnc")
                        .HasColumnType("int");

                    b.Property<int?>("ZapEmettriceId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ZapReceptriceId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("actionImmediate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ProcessorID");

                    b.HasIndex("TransmitterID");

                    b.HasIndex("ZapEmettriceId");

                    b.HasIndex("ZapReceptriceId");

                    b.ToTable("Fnc");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ListeDesActionsD3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ActionDeSecurisationD3Id")
                        .HasColumnType("int");

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DatePrévue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRéelle")
                        .HasColumnType("datetime2");

                    b.Property<string>("PiloteID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StatusAction")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionDeSecurisationD3Id")
                        .IsUnique();

                    b.HasIndex("PiloteID");

                    b.ToTable("ListeDesActionsD3");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FncId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeFnc")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.PlanActionsCorrectivesD5", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ActionEliminationProbleme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePlanifiee")
                        .HasColumnType("datetime2");

                    b.Property<string>("PiloteID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QrqcId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("PiloteID");

                    b.HasIndex("QrqcId")
                        .IsUnique();

                    b.ToTable("PlanActionsCorrectivesD5");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Alerte_qualité")
                        .HasColumnType("bit");

                    b.Property<int>("FNCId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("client_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("nature_defaut")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FNCId")
                        .IsUnique();

                    b.HasIndex("ProcessorID");

                    b.ToTable("Qrqc");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.QuantitéTriéeParJour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Jour1")
                        .HasColumnType("int");

                    b.Property<int?>("Jour2")
                        .HasColumnType("int");

                    b.Property<int?>("Jour3")
                        .HasColumnType("int");

                    b.Property<int?>("Jour4")
                        .HasColumnType("int");

                    b.Property<int?>("Jour5")
                        .HasColumnType("int");

                    b.Property<int>("TriActionImmédiateGlobaleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TriActionImmédiateGlobaleId")
                        .IsUnique();

                    b.ToTable("QuantitéTriéeParJour");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Recherche_causes_racinesD4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DatePrevue")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateReelle")
                        .HasColumnType("date");

                    b.Property<string>("Evolution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PiloteID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PiloteID");

                    b.ToTable("Recherche_causes_racinesD4");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ReparerD3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionDeSecurisationD3ID")
                        .HasColumnType("int");

                    b.Property<string>("PiloteID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Réparer_Déclenchement")
                        .HasColumnType("int");

                    b.Property<int?>("Réparer_Définition_Des_Flux")
                        .HasColumnType("int");

                    b.Property<int?>("Réparer_Définition_Du_Point")
                        .HasColumnType("int");

                    b.Property<int?>("Réparer_Edition")
                        .HasColumnType("int");

                    b.Property<int?>("Réparer_Formation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionDeSecurisationD3ID")
                        .IsUnique();

                    b.HasIndex("PiloteID");

                    b.ToTable("ReparerD3");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Réclamation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Réclamation");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.SuiviD6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateRealisation1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRealisation2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRealisation3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRealisation4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRealisation5")
                        .HasColumnType("datetime2");

                    b.Property<string>("Equipe1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipe2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipe3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipe4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipe5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QrqcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QrqcId")
                        .IsUnique();

                    b.ToTable("SuiviD6");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.TriActionImmediateGlobale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionImmediateGlobaleId")
                        .HasColumnType("int");

                    b.Property<int>("NombrePiéceTotale")
                        .HasColumnType("int");

                    b.Property<int>("NombrePiéceTrié")
                        .HasColumnType("int");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ActionImmediateGlobaleId");

                    b.ToTable("TrieActionImmediateGlobale");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.TrierD3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionDeSecurisationD3ID")
                        .HasColumnType("int");

                    b.Property<string>("PiloteID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Trier_Déclenchement")
                        .HasColumnType("int");

                    b.Property<int?>("Trier_Définition")
                        .HasColumnType("int");

                    b.Property<int?>("Trier_Edition")
                        .HasColumnType("int");

                    b.Property<int?>("Trier_En_Cours")
                        .HasColumnType("int");

                    b.Property<int?>("Trier_Expédition")
                        .HasColumnType("int");

                    b.Property<int?>("Trier_Formation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionDeSecurisationD3ID")
                        .IsUnique();

                    b.HasIndex("PiloteID");

                    b.ToTable("TrierD3");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Zap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<int>("nbre_de_lignes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Zap");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.ZapLigne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZapId");

                    b.ToTable("ZapLigne");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fonction")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZapId")
                        .HasColumnType("int");

                    b.HasIndex("ZapId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ActD7", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "Qrqc")
                        .WithOne("Act")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.ActD7", "QrqcId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Qrqc");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "QRQC")
                        .WithOne("actionDeSecurisation")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", "QRQCId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("QRQC");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ActionImmediateGlobale", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", "ActionDeSecurisation")
                        .WithOne("ActionImmediateGlobale")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.ActionImmediateGlobale", "ActionDeSecurisationId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ActionDeSecurisation");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.AssurerD3", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", "ActionDeSecurisationD3")
                        .WithOne("AssurerD3")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.AssurerD3", "ActionDeSecurisationD3ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Pilote")
                        .WithMany("AssurerD3")
                        .HasForeignKey("PiloteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActionDeSecurisationD3");

                    b.Navigation("Pilote");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.CauseOccurenceD4", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "Qrqc")
                        .WithOne("CauseOccurenceD4")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.CauseOccurenceD4", "QrqcId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Qrqc");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.CausesNonDetectionD4", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "Qrqc")
                        .WithOne("CausesNonDetectionD4")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.CausesNonDetectionD4", "QrqcId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Qrqc");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ClotureD8", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "ChefEquipe")
                        .WithMany("ClotureD8")
                        .HasForeignKey("ChefEquipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "Qrqc")
                        .WithOne("cloture")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.ClotureD8", "QrqcId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "QualitéProd")
                        .WithMany()
                        .HasForeignKey("QualitéProdId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "RespProd")
                        .WithMany()
                        .HasForeignKey("RespProdId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "RespQualite")
                        .WithMany()
                        .HasForeignKey("RespQualiteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "RespZap")
                        .WithMany()
                        .HasForeignKey("RespZapId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ChefEquipe");

                    b.Navigation("Qrqc");

                    b.Navigation("QualitéProd");

                    b.Navigation("RespProd");

                    b.Navigation("RespQualite");

                    b.Navigation("RespZap");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ContenirD3", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", "ActionDeSecurisationD3")
                        .WithOne("ContenirD3")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.ContenirD3", "ActionDeSecurisationD3ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Pilote")
                        .WithMany("ContenirD3")
                        .HasForeignKey("PiloteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActionDeSecurisationD3");

                    b.Navigation("Pilote");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.DescriptionDuProblemeD2", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "QRQC")
                        .WithOne("DescriptionDuProbleme")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.DescriptionDuProblemeD2", "QRQCId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("QRQC");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Equipe", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "Qrqc")
                        .WithMany("Equipe")
                        .HasForeignKey("QrqcId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "applicationUser")
                        .WithMany("Equipe")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Qrqc");

                    b.Navigation("applicationUser");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Fnc", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", null)
                        .WithMany("Fncs")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Processor")
                        .WithMany()
                        .HasForeignKey("ProcessorID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Transmitter")
                        .WithMany()
                        .HasForeignKey("TransmitterID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Zap", "ZapEmettrice")
                        .WithMany("FncsEmettrices")
                        .HasForeignKey("ZapEmettriceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Zap", "ZapReceptrice")
                        .WithMany("FncsReceptrices")
                        .HasForeignKey("ZapReceptriceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Processor");

                    b.Navigation("Transmitter");

                    b.Navigation("ZapEmettrice");

                    b.Navigation("ZapReceptrice");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ListeDesActionsD3", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", "ActionDeSecurisationD3")
                        .WithOne("ListeDesActionsD3")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.ListeDesActionsD3", "ActionDeSecurisationD3Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Pilote")
                        .WithMany("ListeDesActionsD3")
                        .HasForeignKey("PiloteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActionDeSecurisationD3");

                    b.Navigation("Pilote");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Notification", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.PlanActionsCorrectivesD5", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Pilote")
                        .WithMany()
                        .HasForeignKey("PiloteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "Qrqc")
                        .WithOne("planActionsCorrectives")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.PlanActionsCorrectivesD5", "QrqcId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pilote");

                    b.Navigation("Qrqc");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Fnc", "FNC")
                        .WithOne("Qrqc")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "FNCId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Processor")
                        .WithMany("Qrqcs")
                        .HasForeignKey("ProcessorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FNC");

                    b.Navigation("Processor");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.QuantitéTriéeParJour", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.TriActionImmediateGlobale", "trieActionImmediateGlobale")
                        .WithOne("QuantitéTriéesParJours")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.QuantitéTriéeParJour", "TriActionImmédiateGlobaleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("trieActionImmediateGlobale");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Recherche_causes_racinesD4", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Pilote")
                        .WithMany()
                        .HasForeignKey("PiloteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pilote");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ReparerD3", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", "ActionDeSecurisationD3")
                        .WithOne("ReparerD3")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.ReparerD3", "ActionDeSecurisationD3ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Pilote")
                        .WithMany("ReparerD3")
                        .HasForeignKey("PiloteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActionDeSecurisationD3");

                    b.Navigation("Pilote");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Réclamation", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "User")
                        .WithMany("Réclamations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.SuiviD6", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", "Qrqc")
                        .WithOne("Suivi")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.SuiviD6", "QrqcId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Qrqc");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.TriActionImmediateGlobale", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ActionImmediateGlobale", "ActionImmediateGlobale")
                        .WithMany("TriActionImmediateGlobales")
                        .HasForeignKey("ActionImmediateGlobaleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActionImmediateGlobale");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.TrierD3", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", "ActionDeSecurisationD3")
                        .WithOne("TrierD3")
                        .HasForeignKey("PFE_Etudiant_Asteelflash.Domain.Entities.TrierD3", "ActionDeSecurisationD3ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", "Pilote")
                        .WithMany("TrierD3")
                        .HasForeignKey("PiloteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActionDeSecurisationD3");

                    b.Navigation("Pilote");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.ZapLigne", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Zap", "Zap")
                        .WithMany("ZapLigne")
                        .HasForeignKey("ZapId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Zap");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", b =>
                {
                    b.HasOne("PFE_Etudiant_Asteelflash.Domain.Entities.Zap", "Zap")
                        .WithMany("applicationUsers")
                        .HasForeignKey("ZapId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Zap");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ActionDeSecurisationD3", b =>
                {
                    b.Navigation("ActionImmediateGlobale");

                    b.Navigation("AssurerD3");

                    b.Navigation("ContenirD3");

                    b.Navigation("ListeDesActionsD3")
                        .IsRequired();

                    b.Navigation("ReparerD3");

                    b.Navigation("TrierD3");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ActionImmediateGlobale", b =>
                {
                    b.Navigation("TriActionImmediateGlobales");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Fnc", b =>
                {
                    b.Navigation("Qrqc");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Qrqc", b =>
                {
                    b.Navigation("Act")
                        .IsRequired();

                    b.Navigation("CauseOccurenceD4")
                        .IsRequired();

                    b.Navigation("CausesNonDetectionD4")
                        .IsRequired();

                    b.Navigation("DescriptionDuProbleme")
                        .IsRequired();

                    b.Navigation("Equipe");

                    b.Navigation("Suivi")
                        .IsRequired();

                    b.Navigation("actionDeSecurisation")
                        .IsRequired();

                    b.Navigation("cloture")
                        .IsRequired();

                    b.Navigation("planActionsCorrectives")
                        .IsRequired();
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.TriActionImmediateGlobale", b =>
                {
                    b.Navigation("QuantitéTriéesParJours");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.Zap", b =>
                {
                    b.Navigation("FncsEmettrices");

                    b.Navigation("FncsReceptrices");

                    b.Navigation("ZapLigne");

                    b.Navigation("applicationUsers");
                });

            modelBuilder.Entity("PFE_Etudiant_Asteelflash.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("AssurerD3");

                    b.Navigation("ClotureD8");

                    b.Navigation("ContenirD3");

                    b.Navigation("Equipe");

                    b.Navigation("Fncs");

                    b.Navigation("ListeDesActionsD3");

                    b.Navigation("Qrqcs");

                    b.Navigation("ReparerD3");

                    b.Navigation("Réclamations");

                    b.Navigation("TrierD3");
                });
#pragma warning restore 612, 618
        }
    }
}
